name: Automatically open a docs-content tracking issue
on:
  issues:
    types:
      - opened
      - reopened # todo remove
jobs:
  parse_release_issue:
    name: parse_release_issue
    runs-on: ubuntu-latest
    outputs: 
      result: ${{ steps.parse_issue.outputs.result }}
    steps:
      - name: Parse release issue
        uses: actions/github-script@2b34a689ec86a68d8ab9478298f91d5401337b7d
        id: parse_issue
        with:
          script: |
            return {
                docsNeeded: true,
                notNeded: false,
              };

  open_docs_issue:
    runs-on: ubuntu-latest
    needs: parse_release_issue
    if: fromJSON(needs.parse_release_issue.outputs.result).docsNeeded
    steps:
      - name: Create an issue in the docs-content repo
        run: |
          new_issue_url="$(gh issue create --title "$ISSUE_TITLE" --body "$ISSUE_BODY" --repo myarb-test-org/fake-docs-content)"
          echo 'NEW_ISSUE='$new_issue_url >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
          ISSUE_BODY: ${{ fromJSON(needs.parse_release_issue.outputs.result).newBody }}
          ISSUE_TITLE: ${{ fromJSON(needs.parse_release_issue.outputs.result).newTitle }}

      - name: Label release issue with GHAE if applicable
        if: fromJSON(needs.parse_release_issue.outputs.result).ghaeApplicable
        env:
          GITHUB_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
          NEW_ISSUE: ${{ env.NEW_ISSUE }}
        run: |
          gh issue edit $NEW_ISSUE --add-label "GHAE"
          
      - name: Label docs content issue with tier label 
        if: ${{ fromJSON(needs.parse_release_issue.outputs.result).tier=='Tier 3' }}
        env:
          GITHUB_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
          NEW_ISSUE: ${{ env.NEW_ISSUE }}
        run: |
          gh issue edit $NEW_ISSUE --add-label "Tier 3 or 4"
          
      - name: Label docs content issue with tier label 
        if: ${{ fromJSON(needs.parse_release_issue.outputs.result).tier=='Tier 1'||fromJSON(needs.parse_release_issue.outputs.result).tier=='Tier 2' }}
        env:
          GITHUB_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
          NEW_ISSUE: ${{ env.NEW_ISSUE }}
        run: |
          gh issue edit $NEW_ISSUE --add-label "Tier 1 or 2"
