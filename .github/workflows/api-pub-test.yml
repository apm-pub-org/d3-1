
# When a pull request that edits the OpenAPI schema is opened, reopened, or synchronized, this workflow will generate a docs-internal PR to preview the corresponding docs changes

# todo change repo name everywhere in this file

# todo need to add this secret to the gh repo and put in docs eng rotation. it is a fg pat with contents write and pr write permissions and access to both repos.

name: Build REST API docs preview

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - 'app/api/description/**'

permissions:
  contents: read
  pull-requests: write

jobs:
  build_docs_preview:
    runs-on: ubuntu-latest
    steps:
    - run: pwd
      # todo update the hardcoded pwd everywhere in this file, or store this in a variable

    # The github/github repo clone needs to be
    # at the same level as the docs-internal clone,
    # so use the `path` parameter
    - name: Check out the github/github repo
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      with:
        path: 'github'

    # Build the docs-internal branch name 
    # based on the github/github branch name.
    # If this branch doesn't already exist, we will 
    # check out main instead and create the branch later.
    - name: Determine docs branch name
      run: |-
        echo "DOCS_BRANCH=$BRANCH_NAME" >> "$GITHUB_ENV"
        if [[ -n $(git ls-remote --heads https://github.com/ske-test-org/second-repo.git $BRANCH_NAME) ]]
        then
          echo "DOCS_CHECKOUT=$BRANCH_NAME" >> "$GITHUB_ENV"
        else
          echo "DOCS_CHECKOUT=main" >> "$GITHUB_ENV"
        fi
      env:
        BRANCH_NAME: ${{ github.head_ref }}_openapi_docs_preview
  
    # todo delete this step
    - name: Print branches
      run: |-
        echo "env branch is: ${{ env.DOCS_BRANCH }}"
        echo "env checkout is: ${{ env.DOCS_CHECKOUT }}"

    # Check out the docs-internal branch corresponding to this PR if one exists,
    # otherwise checkout docs-internal main.
    - name: Check out the github/docs-internal repo 
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      with:
        repository: "ske-test-org/second-repo"
        path: 'second-repo'
        token: ${{ secrets.PAT_preview }}
        ref: ${{ env.DOCS_CHECKOUT }}

    - name: Setup Node.js
      uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
      with:
        node-version: '16'

    # todo delete this step
    - name: Check file contents
      run: |-
        cd /home/runner/work/test-org-repo/test-org-repo/second-repo
        cat newFile.txt

    - name: Git config
      run: |-
        cd /home/runner/work/test-org-repo/test-org-repo/second-repo
        git config --global user.name "docs-bot"
        git config --global user.email "77750099+docs-bot@users.noreply.github.com"

    # If we checked out main, create a branch
    - if: ${{ env.DOCS_CHECKOUT  == 'main' }}
      name: Create a docs branch if needed
      run: |- 
        cd /home/runner/work/test-org-repo/test-org-repo/second-repo
        git checkout -b $BRANCH_NAME
      env:
        BRANCH_NAME: ${{ env.DOCS_BRANCH }}

    # todo delete this step
    - name: Check file contents
      run: |-
        cd /home/runner/work/test-org-repo/test-org-repo/second-repo
        cat newFile.txt

    - name: Generate the docs data files
      run: |- # todo this only builds rest files; also want to build webhook files # todo add include unpublished option
        cd /home/runner/work/test-org-repo/test-org-repo/second-repo
        npm install
        npm run sync-rest

    # todo delete this step
    - name: Check file contents and git status
      run: |-
        cd /home/runner/work/test-org-repo/test-org-repo/second-repo
        cat newFile.txt
        git status

    - name: Push the docs data files if there are changes to push
      run: |-
        cd /home/runner/work/test-org-repo/test-org-repo/second-repo
        if ! git diff --quiet
        then
          git add .
          git commit -m "generate OpenAPI data files"
          git push --set-upstream origin HEAD
        else
          echo "No changes to commit"
        fi

    - name: Open a docs-internal PR if there isn't one already
      run: |-
        cd /home/runner/work/test-org-repo/test-org-repo/second-repo
        pr_exists=$(gh pr list --head "$BRANCH_NAME")
        if [ -z "$pr_exists" ]
        then
          docs_pr_url="$(gh pr create --title "[FOR PREVIEW ONLY] Preview for todo" --body "todo")"
          echo 'DOCS_PR='$docs_pr_url >> $GITHUB_ENV
        else
          echo "A docs-internal PR already exists for branch $BRANCH_NAME"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_preview }}
        BRANCH_NAME: ${{ env.DOCS_BRANCH }}

    - if: ${{ env.DOCS_PR }}
      name: Comment to share the docs PR on the github PR
      run: gh pr comment $GITHUB_PR --body "Todo docs preview is $DOCS_PR"
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        DOCS_PR: ${{ env.DOCS_PR }}
        GITHUB_PR: ${{ github.event.pull_request.html_url }}
