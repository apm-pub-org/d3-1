
# When a pull request that edits the OpenAPI schema is opened, reopened, or synchronized, this workflow will generate a docs-internal PR to preview the corresponding docs changes

# todo change repo name everywhere in this file

# todo need to add this secret to the gh repo and put in docs eng rotation. it is a fg pat with contents write and pr write permissions and access to both repos.

name: Build REST API docs preview

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - 'app/api/description/**'

permissions:
  contents: read
  pull-requests: write

jobs:
  build_docs_preview:
    runs-on: ubuntu-latest
    steps:
    - name: Store pwd
      run: |-
        echo "PWD=$(pwd)" >> "$GITHUB_ENV"

    # The github/github repo clone needs to be
    # at the same level as the docs-internal clone,
    # so use the `path` parameter
    - name: Check out the github/github repo
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      with:
        path: 'github'

    # Build the docs-internal branch name 
    # based on the github/github branch name.
    # If this branch doesn't already exist, we will 
    # check out main instead and create the branch later.
    - name: Determine docs branch name
      run: |-
        echo "DOCS_BRANCH=$DOCS_BRANCH" >> "$GITHUB_ENV"
        if [[ -n $(git ls-remote --heads https://github.com/ske-test-org/second-repo.git $DOCS_BRANCH) ]]
        then
          echo "DOCS_CHECKOUT=$DOCS_BRANCH" >> "$GITHUB_ENV"
        else
          echo "DOCS_CHECKOUT=main" >> "$GITHUB_ENV"
        fi
      env:
        DOCS_BRANCH: ${{ github.head_ref }}_openapi_docs_preview
  
    # fixme delete this step
    - name: Print branches
      run: |-
        echo "env branch is: ${{ env.DOCS_BRANCH }}"
        echo "env checkout is: ${{ env.DOCS_CHECKOUT }}"

    # Check out the docs-internal branch corresponding to this PR if one exists,
    # otherwise checkout docs-internal main.
    - name: Check out the github/docs-internal repo 
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      with:
        repository: "ske-test-org/second-repo"
        path: 'second-repo'
        token: ${{ secrets.PAT_preview }}
        ref: ${{ env.DOCS_CHECKOUT }}

    - name: Setup Node.js
      uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
      with:
        node-version: '16'

    # fixme delete this step
    - name: Check file contents
      run: |-
        cd ${{ env.PWD }}/second-repo
        cat newFile.txt

    - name: Git config
      run: |-
        cd ${{ env.PWD }}/second-repo
        git config --global user.name "docs-bot"
        git config --global user.email "77750099+docs-bot@users.noreply.github.com"

    # If we checked out main, create a branch
    - if: ${{ env.DOCS_CHECKOUT  == 'main' }}
      name: Create a docs branch if needed
      run: |- 
        cd ${{ env.PWD }}/second-repo
        git checkout -b $DOCS_BRANCH
      env:
        DOCS_BRANCH: ${{ env.DOCS_BRANCH }}

    # fixme delete this step
    - name: Check file contents
      run: |-
        cd ${{ env.PWD }}/second-repo
        cat newFile.txt

    - name: Generate the docs data files
      run: |- # todo this only builds rest files; also want to build webhook files # todo add include unpublished option
        cd ${{ env.PWD }}/second-repo
        npm install
        npm run sync-rest

    # fixme delete this step
    - name: Check file contents and git status
      run: |-
        cd ${{ env.PWD }}/second-repo
        cat newFile.txt
        git status

    - name: Push the docs data files if there are changes to push
      run: |-
        cd ${{ env.PWD }}/second-repo
        if ! git diff --quiet
        then
          git add .
          git commit -m "generate OpenAPI data files"
          git push --set-upstream origin HEAD
          echo "CHANGES_Q=true" >> "$GITHUB_ENV"
        else
          echo "No changes to commit"
        fi

    - name: Open a docs-internal PR if there isn't one already and there were changes
      if: ${{ env.CHANGES_Q }}
      run: |-
        cd ${{ env.PWD }}/second-repo
        pr_exists=$(gh pr list --head "$DOCS_BRANCH")
        if [[ -z "$pr_exists" ]]
        then
          docs_pr_url="$(gh pr create --draft --title "[FOR PREVIEW ONLY] Preview for OpenAPI changes from $GH_BRANCH" --body "**This PR is for preview purposes only and should not be merged.** Learn more [here](https://thehub.github.com/epd/engineering/products-and-services/public-apis/rest/openapi/openapi-in-the-docs/#propagating-changes-to-the-docs) about the publication process for OpenAPI-derived docs.

          This PR will render a docs preview for the OpenAPI changes on the github/github branch $GH_BRANCH.

          - Any operations or webhooks marked as `published: false` will display in this preview for convenience, but will not be published in the docs.
          - Any nodes marked as `x-unpublished` will not display in this preview. To see how those nodes will render, you can [manually build a preview](https://thehub.github.com/epd/engineering/products-and-services/public-apis/rest/openapi/openapi-in-the-docs/#previewing-changes-in-the-docs).

          To view the preview:
          
          - Wait for the 'Azure - Deploy Preview Environment' workflow to complete.
          - Click the 'View Deployment' button in the timeline.
          - In the deployment preview, navigate to the docs page(s) where you expect your changes.

          If you have questions, ask in #docs-api-and-events.")"
          echo 'DOCS_PR='$docs_pr_url >> $GITHUB_ENV
        else
          echo "A docs-internal PR already exists for branch $DOCS_BRANCH"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_preview }}
        DOCS_BRANCH: ${{ env.DOCS_BRANCH }}
        GH_BRANCH: ${{ github.head_ref }}

    - if: ${{ env.DOCS_PR }}
      name: Comment to share the docs PR on the github PR
      run: gh pr comment $GITHUB_PR --body "A preview for the OpenAPI docs changes will be available in $DOCS_PR"
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        DOCS_PR: ${{ env.DOCS_PR }}
        GITHUB_PR: ${{ github.event.pull_request.html_url }}
